// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: event/event.proto

package event1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Opponents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opponent1Id string `protobuf:"bytes,1,opt,name=opponent1_id,json=opponent1Id,proto3" json:"opponent1_id,omitempty"`
	Opponent2Id string `protobuf:"bytes,2,opt,name=opponent2_id,json=opponent2Id,proto3" json:"opponent2_id,omitempty"`
}

func (x *Opponents) Reset() {
	*x = Opponents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Opponents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Opponents) ProtoMessage() {}

func (x *Opponents) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Opponents.ProtoReflect.Descriptor instead.
func (*Opponents) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{0}
}

func (x *Opponents) GetOpponent1Id() string {
	if x != nil {
		return x.Opponent1Id
	}
	return ""
}

func (x *Opponents) GetOpponent2Id() string {
	if x != nil {
		return x.Opponent2Id
	}
	return ""
}

type Match struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId    string     `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	StartedAt  string     `protobuf:"bytes,2,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	EndAt      string     `protobuf:"bytes,3,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
	IsStarted  bool       `protobuf:"varint,4,opt,name=is_started,json=isStarted,proto3" json:"is_started,omitempty"`
	MatchNews  string     `protobuf:"bytes,5,opt,name=match_news,json=matchNews,proto3" json:"match_news,omitempty"`
	WinnerId   string     `protobuf:"bytes,6,opt,name=winner_id,json=winnerId,proto3" json:"winner_id,omitempty"`
	Opponents  *Opponents `protobuf:"bytes,7,opt,name=opponents,proto3" json:"opponents,omitempty"`
	IsFinished bool       `protobuf:"varint,8,opt,name=is_finished,json=isFinished,proto3" json:"is_finished,omitempty"`
}

func (x *Match) Reset() {
	*x = Match{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match) ProtoMessage() {}

func (x *Match) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match.ProtoReflect.Descriptor instead.
func (*Match) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{1}
}

func (x *Match) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *Match) GetStartedAt() string {
	if x != nil {
		return x.StartedAt
	}
	return ""
}

func (x *Match) GetEndAt() string {
	if x != nil {
		return x.EndAt
	}
	return ""
}

func (x *Match) GetIsStarted() bool {
	if x != nil {
		return x.IsStarted
	}
	return false
}

func (x *Match) GetMatchNews() string {
	if x != nil {
		return x.MatchNews
	}
	return ""
}

func (x *Match) GetWinnerId() string {
	if x != nil {
		return x.WinnerId
	}
	return ""
}

func (x *Match) GetOpponents() *Opponents {
	if x != nil {
		return x.Opponents
	}
	return nil
}

func (x *Match) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

type Tour struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TourId    string   `protobuf:"bytes,1,opt,name=tour_id,json=tourId,proto3" json:"tour_id,omitempty"`
	Matches   []*Match `protobuf:"bytes,2,rep,name=matches,proto3" json:"matches,omitempty"`
	TourName  string   `protobuf:"bytes,3,opt,name=tour_name,json=tourName,proto3" json:"tour_name,omitempty"`
	WinnersId []string `protobuf:"bytes,4,rep,name=winners_id,json=winnersId,proto3" json:"winners_id,omitempty"`
	IsStarted bool     `protobuf:"varint,5,opt,name=is_started,json=isStarted,proto3" json:"is_started,omitempty"`
}

func (x *Tour) Reset() {
	*x = Tour{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tour) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tour) ProtoMessage() {}

func (x *Tour) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tour.ProtoReflect.Descriptor instead.
func (*Tour) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{2}
}

func (x *Tour) GetTourId() string {
	if x != nil {
		return x.TourId
	}
	return ""
}

func (x *Tour) GetMatches() []*Match {
	if x != nil {
		return x.Matches
	}
	return nil
}

func (x *Tour) GetTourName() string {
	if x != nil {
		return x.TourName
	}
	return ""
}

func (x *Tour) GetWinnersId() []string {
	if x != nil {
		return x.WinnersId
	}
	return nil
}

func (x *Tour) GetIsStarted() bool {
	if x != nil {
		return x.IsStarted
	}
	return false
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId       string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventName     string `protobuf:"bytes,2,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	SportType     string `protobuf:"bytes,3,opt,name=sport_type,json=sportType,proto3" json:"sport_type,omitempty"`
	CurrentTourId string `protobuf:"bytes,4,opt,name=current_tour_id,json=currentTourId,proto3" json:"current_tour_id,omitempty"`
	WinnerId      string `protobuf:"bytes,5,opt,name=winner_id,json=winnerId,proto3" json:"winner_id,omitempty"`
	IsStarted     bool   `protobuf:"varint,6,opt,name=is_started,json=isStarted,proto3" json:"is_started,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{3}
}

func (x *Event) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *Event) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *Event) GetSportType() string {
	if x != nil {
		return x.SportType
	}
	return ""
}

func (x *Event) GetCurrentTourId() string {
	if x != nil {
		return x.CurrentTourId
	}
	return ""
}

func (x *Event) GetWinnerId() string {
	if x != nil {
		return x.WinnerId
	}
	return ""
}

func (x *Event) GetIsStarted() bool {
	if x != nil {
		return x.IsStarted
	}
	return false
}

type CreatEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountTour     int32    `protobuf:"varint,1,opt,name=count_tour,json=countTour,proto3" json:"count_tour,omitempty"`
	AthleteId     []string `protobuf:"bytes,2,rep,name=athlete_id,json=athleteId,proto3" json:"athlete_id,omitempty"`
	DurationMatch string   `protobuf:"bytes,3,opt,name=duration_match,json=durationMatch,proto3" json:"duration_match,omitempty"`
	EventName     string   `protobuf:"bytes,4,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	SportType     string   `protobuf:"bytes,5,opt,name=sport_type,json=sportType,proto3" json:"sport_type,omitempty"`
}

func (x *CreatEventReq) Reset() {
	*x = CreatEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatEventReq) ProtoMessage() {}

func (x *CreatEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatEventReq.ProtoReflect.Descriptor instead.
func (*CreatEventReq) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{4}
}

func (x *CreatEventReq) GetCountTour() int32 {
	if x != nil {
		return x.CountTour
	}
	return 0
}

func (x *CreatEventReq) GetAthleteId() []string {
	if x != nil {
		return x.AthleteId
	}
	return nil
}

func (x *CreatEventReq) GetDurationMatch() string {
	if x != nil {
		return x.DurationMatch
	}
	return ""
}

func (x *CreatEventReq) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *CreatEventReq) GetSportType() string {
	if x != nil {
		return x.SportType
	}
	return ""
}

type EventStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventStatus) Reset() {
	*x = EventStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStatus) ProtoMessage() {}

func (x *EventStatus) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStatus.ProtoReflect.Descriptor instead.
func (*EventStatus) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{5}
}

func (x *EventStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *GetEventReq) Reset() {
	*x = GetEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventReq) ProtoMessage() {}

func (x *GetEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventReq.ProtoReflect.Descriptor instead.
func (*GetEventReq) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{6}
}

func (x *GetEventReq) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type GetEventsTourReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	TourId  string `protobuf:"bytes,2,opt,name=tour_id,json=tourId,proto3" json:"tour_id,omitempty"`
}

func (x *GetEventsTourReq) Reset() {
	*x = GetEventsTourReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventsTourReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsTourReq) ProtoMessage() {}

func (x *GetEventsTourReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsTourReq.ProtoReflect.Descriptor instead.
func (*GetEventsTourReq) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{7}
}

func (x *GetEventsTourReq) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *GetEventsTourReq) GetTourId() string {
	if x != nil {
		return x.TourId
	}
	return ""
}

type GetEventsToursMatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	TourId  string `protobuf:"bytes,2,opt,name=tour_id,json=tourId,proto3" json:"tour_id,omitempty"`
	MatchId string `protobuf:"bytes,3,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
}

func (x *GetEventsToursMatchReq) Reset() {
	*x = GetEventsToursMatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventsToursMatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsToursMatchReq) ProtoMessage() {}

func (x *GetEventsToursMatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsToursMatchReq.ProtoReflect.Descriptor instead.
func (*GetEventsToursMatchReq) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{8}
}

func (x *GetEventsToursMatchReq) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *GetEventsToursMatchReq) GetTourId() string {
	if x != nil {
		return x.TourId
	}
	return ""
}

func (x *GetEventsToursMatchReq) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

type AddAthleteToEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId   string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	AthleteId string `protobuf:"bytes,2,opt,name=athlete_id,json=athleteId,proto3" json:"athlete_id,omitempty"`
}

func (x *AddAthleteToEventReq) Reset() {
	*x = AddAthleteToEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAthleteToEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAthleteToEventReq) ProtoMessage() {}

func (x *AddAthleteToEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAthleteToEventReq.ProtoReflect.Descriptor instead.
func (*AddAthleteToEventReq) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{9}
}

func (x *AddAthleteToEventReq) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *AddAthleteToEventReq) GetAthleteId() string {
	if x != nil {
		return x.AthleteId
	}
	return ""
}

type StartEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *StartEventReq) Reset() {
	*x = StartEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartEventReq) ProtoMessage() {}

func (x *StartEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartEventReq.ProtoReflect.Descriptor instead.
func (*StartEventReq) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{10}
}

func (x *StartEventReq) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type UpdateMatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId    string `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	IsStarted  bool   `protobuf:"varint,4,opt,name=is_started,json=isStarted,proto3" json:"is_started,omitempty"`
	MatchNews  string `protobuf:"bytes,5,opt,name=match_news,json=matchNews,proto3" json:"match_news,omitempty"`
	WinnerId   string `protobuf:"bytes,6,opt,name=winner_id,json=winnerId,proto3" json:"winner_id,omitempty"`
	EventId    string `protobuf:"bytes,7,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	TourId     string `protobuf:"bytes,8,opt,name=tour_id,json=tourId,proto3" json:"tour_id,omitempty"`
	IsFinished bool   `protobuf:"varint,9,opt,name=is_finished,json=isFinished,proto3" json:"is_finished,omitempty"`
}

func (x *UpdateMatchReq) Reset() {
	*x = UpdateMatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMatchReq) ProtoMessage() {}

func (x *UpdateMatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMatchReq.ProtoReflect.Descriptor instead.
func (*UpdateMatchReq) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateMatchReq) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *UpdateMatchReq) GetIsStarted() bool {
	if x != nil {
		return x.IsStarted
	}
	return false
}

func (x *UpdateMatchReq) GetMatchNews() string {
	if x != nil {
		return x.MatchNews
	}
	return ""
}

func (x *UpdateMatchReq) GetWinnerId() string {
	if x != nil {
		return x.WinnerId
	}
	return ""
}

func (x *UpdateMatchReq) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *UpdateMatchReq) GetTourId() string {
	if x != nil {
		return x.TourId
	}
	return ""
}

func (x *UpdateMatchReq) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

var File_event_event_proto protoreflect.FileDescriptor

var file_event_event_proto_rawDesc = []byte{
	0x0a, 0x11, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x51, 0x0a, 0x09, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x31, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x31, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x32,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x32, 0x49, 0x64, 0x22, 0xfe, 0x01, 0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x65, 0x77, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x65, 0x77, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x09,
	0x6f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x09, 0x6f, 0x70, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x04, 0x54, 0x6f, 0x75, 0x72,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x75, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x6f, 0x75, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x6f, 0x75, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x77, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x22, 0xc4, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x75, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x22, 0xb2, 0x01,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x75, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x27, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x28, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x75, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x22, 0x67, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x75, 0x72, 0x73, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x75, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x41, 0x74, 0x68,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x68,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0xdb, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x65, 0x77, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x65, 0x77, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x75, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x32, 0xd4, 0x02, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x20, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0c, 0x2e, 0x47,
	0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x06, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x29, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x54,
	0x6f, 0x75, 0x72, 0x12, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x54,
	0x6f, 0x75, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x05, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x36, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x75, 0x72, 0x73, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x54, 0x6f, 0x75, 0x72, 0x73, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x06, 0x2e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x38, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x41, 0x74, 0x68, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x2e, 0x41, 0x64, 0x64,
	0x41, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x0c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2a, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x0b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x0f, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x1a, 0x5a, 0x18, 0x64, 0x69, 0x79,
	0x6f, 0x72, 0x62, 0x65, 0x6b, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x3b, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_event_event_proto_rawDescOnce sync.Once
	file_event_event_proto_rawDescData = file_event_event_proto_rawDesc
)

func file_event_event_proto_rawDescGZIP() []byte {
	file_event_event_proto_rawDescOnce.Do(func() {
		file_event_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_event_proto_rawDescData)
	})
	return file_event_event_proto_rawDescData
}

var file_event_event_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_event_event_proto_goTypes = []any{
	(*Opponents)(nil),              // 0: Opponents
	(*Match)(nil),                  // 1: Match
	(*Tour)(nil),                   // 2: Tour
	(*Event)(nil),                  // 3: Event
	(*CreatEventReq)(nil),          // 4: CreatEventReq
	(*EventStatus)(nil),            // 5: EventStatus
	(*GetEventReq)(nil),            // 6: GetEventReq
	(*GetEventsTourReq)(nil),       // 7: GetEventsTourReq
	(*GetEventsToursMatchReq)(nil), // 8: GetEventsToursMatchReq
	(*AddAthleteToEventReq)(nil),   // 9: AddAthleteToEventReq
	(*StartEventReq)(nil),          // 10: StartEventReq
	(*UpdateMatchReq)(nil),         // 11: UpdateMatchReq
}
var file_event_event_proto_depIdxs = []int32{
	0,  // 0: Match.opponents:type_name -> Opponents
	1,  // 1: Tour.matches:type_name -> Match
	4,  // 2: EventService.CreateEvent:input_type -> CreatEventReq
	6,  // 3: EventService.GetEvent:input_type -> GetEventReq
	7,  // 4: EventService.GetEventsTour:input_type -> GetEventsTourReq
	8,  // 5: EventService.GetEventsToursMatch:input_type -> GetEventsToursMatchReq
	9,  // 6: EventService.AddAthleteToEvent:input_type -> AddAthleteToEventReq
	10, // 7: EventService.StartEvent:input_type -> StartEventReq
	11, // 8: EventService.UpdateMatch:input_type -> UpdateMatchReq
	5,  // 9: EventService.CreateEvent:output_type -> EventStatus
	3,  // 10: EventService.GetEvent:output_type -> Event
	2,  // 11: EventService.GetEventsTour:output_type -> Tour
	1,  // 12: EventService.GetEventsToursMatch:output_type -> Match
	5,  // 13: EventService.AddAthleteToEvent:output_type -> EventStatus
	5,  // 14: EventService.StartEvent:output_type -> EventStatus
	5,  // 15: EventService.UpdateMatch:output_type -> EventStatus
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_event_event_proto_init() }
func file_event_event_proto_init() {
	if File_event_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_event_event_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Opponents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_event_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Match); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_event_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Tour); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_event_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_event_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CreatEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_event_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*EventStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_event_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_event_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetEventsTourReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_event_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetEventsToursMatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_event_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AddAthleteToEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_event_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*StartEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_event_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_event_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_event_proto_goTypes,
		DependencyIndexes: file_event_event_proto_depIdxs,
		MessageInfos:      file_event_event_proto_msgTypes,
	}.Build()
	File_event_event_proto = out.File
	file_event_event_proto_rawDesc = nil
	file_event_event_proto_goTypes = nil
	file_event_event_proto_depIdxs = nil
}
